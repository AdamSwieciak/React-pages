{"version":3,"sources":["components/Posts/Post.js","containers/Blog/Blog.js"],"names":["Post","props","field","url","length","data","currency","mid","src","alt","title","Col","xs","lg","className","paragraph","Blog","this","fetchData","reqPicture","axios","get","reqNbpTables","all","then","spread","responses","onUrl","onCurrency","rates","catch","error","console","log","onError","addPost","posts","Container","Row","state","map","post","id","counterPosts","uniqid","Button","variant","onClick","Component","connect","dispatch","type","acctionTypes"],"mappings":"2UA8BeA,MAzBf,SAAcC,GACb,IAAIC,EAaJ,OAXIA,EADiB,IAArBD,EAAME,IAAIC,OAEP,wCACQH,EAAMI,KAAKC,SADnB,IAC8BL,EAAMI,KAAKE,OAIzC,cAAC,IAAD,UACC,qBAAKC,IAAKP,EAAME,IAAKM,IAAKR,EAAMS,UAKnC,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,UAAU,yBAA9B,SACC,sBAAKA,UAAU,SAAf,UACEZ,EACD,6BAAKD,EAAMS,QACX,4BAAIT,EAAMc,kBCbRC,E,kLAEJC,KAAKC,c,kCAIO,IAAD,OAILC,EAAaC,IAAMC,IAHX,qBAIRC,EAAeF,IAAMC,IAHX,iDAKhBD,IACEG,IAAI,CAACJ,EAAYG,IACjBE,KACAJ,IAAMK,QAAO,WAAmB,IAAD,uBAAdC,EAAc,yBAAdA,EAAc,gBAC9B,EAAKzB,MAAM0B,MAAMD,EAAU,GAAGrB,KAAK,GAAGF,IAAK,GAC3C,EAAKF,MAAM0B,MAAMD,EAAU,GAAGrB,KAAK,GAAGF,IAAK,GAC3C,EAAKF,MAAM2B,WAAWF,EAAU,GAAGrB,KAAK,GAAGwB,MAAM,QAGlDC,OAAM,SAACC,GACPC,QAAQC,IAAIF,GACZ,EAAK9B,MAAMiC,e,iCAKbjB,KAAKhB,MAAMkC,Y,+BAIX,IAAIC,EACH,cAACC,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CAAKxB,UAAU,qCAAf,SACC,0DAmBH,OAdKG,KAAKhB,MAAM8B,QACfK,EAAQnB,KAAKhB,MAAMsC,MAAMC,KAAI,SAACC,GAC7B,OACC,cAAC,EAAD,CACCpC,KAAMoC,EAAKpC,KAEXF,IAAKsC,EAAKtC,IACVO,MAAO+B,EAAK/B,MACZK,UAAW0B,EAAK1B,WAHX0B,EAAKC,QAUb,gCACEzB,KAAKhB,MAAM0C,aAAaH,KAAI,kBAC5B,cAACF,EAAA,EAAD,CAAoBxB,UAAU,YAA9B,SACEsB,GADQQ,UAIX,cAACN,EAAA,EAAD,CAAKxB,UAAU,mCAAf,SACC,cAAC+B,EAAA,EAAD,CACC/B,UAAU,MACVgC,QAAQ,kBACRC,QAAS9B,KAAKhB,MAAMkC,QAHrB,mC,GA/Dca,aA+FJC,uBAnBS,SAACV,GACxB,MAAO,CACNA,MAAOA,EAAMH,MACbL,MAAOQ,EAAMR,MACbY,aAAcJ,EAAMI,iBAIK,SAACO,GAC3B,MAAO,CACNvB,MAAO,SAACtB,EAAMqC,GAAP,OACNQ,EAAS,CAAEC,KAAMC,IAAwBjD,IAAKE,EAAMqC,GAAIA,KACzDd,WAAY,SAACvB,GAAD,OACX6C,EAAS,CAAEC,KAAMC,IAA6B9C,SAAUD,KACzD6B,QAAS,kBAAMgB,EAAS,CAAEC,KAAMC,OAChCjB,QAAS,kBAAMe,EAAS,CAAEC,KAAMC,UAInBH,CAA6CjC","file":"static/js/4.a3e8b1b6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Post.scss';\r\nimport { Col } from 'react-bootstrap';\r\nimport LazyLoad from 'react-lazy-load';\r\n\r\nfunction Post(props) {\r\n\tlet field;\r\n\tprops.url.length === 0\r\n\t\t? (field = (\r\n\t\t\t\t<h5>\r\n\t\t\t\t\tKurs: {props.data.currency} {props.data.mid}\r\n\t\t\t\t</h5>\r\n\t\t  ))\r\n\t\t: (field = (\r\n\t\t\t\t<LazyLoad>\r\n\t\t\t\t\t<img src={props.url} alt={props.title} />\r\n\t\t\t\t</LazyLoad>\r\n\t\t  ));\r\n\r\n\treturn (\r\n\t\t<Col xs={12} lg={3} className='justify-content-center'>\r\n\t\t\t<div className='square'>\r\n\t\t\t\t{field}\r\n\t\t\t\t<h6>{props.title}</h6>\r\n\t\t\t\t<p>{props.paragraph}</p>\r\n\t\t\t</div>\r\n\t\t</Col>\r\n\t);\r\n}\r\n\r\nexport default Post;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport uniqid from 'uniqid';\r\n\r\nimport './Blog.scss';\r\nimport * as acctionTypes from '../../store/action';\r\nimport Post from '../../components/Posts/Post';\r\n\r\nclass Blog extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData();\r\n\t}\r\n\r\n\t// Fetch data\r\n\tfetchData() {\r\n\t\tlet picture = '/v1/images/search';\r\n\t\tlet nbpTables = 'http://api.nbp.pl/api/exchangerates/tables/a/';\r\n\r\n\t\tconst reqPicture = axios.get(picture);\r\n\t\tconst reqNbpTables = axios.get(nbpTables);\r\n\r\n\t\taxios\r\n\t\t\t.all([reqPicture, reqNbpTables])\r\n\t\t\t.then(\r\n\t\t\t\taxios.spread((...responses) => {\r\n\t\t\t\t\tthis.props.onUrl(responses[0].data[0].url, 0);\r\n\t\t\t\t\tthis.props.onUrl(responses[0].data[0].url, 1);\r\n\t\t\t\t\tthis.props.onCurrency(responses[1].data[0].rates[1]);\r\n\t\t\t\t}),\r\n\t\t\t)\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthis.props.onError();\r\n\t\t\t});\r\n\t}\r\n\r\n\taddPosts() {\r\n\t\tthis.props.addPost();\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet posts = (\r\n\t\t\t<Container>\r\n\t\t\t\t<Row className='text-center justify-content-center'>\r\n\t\t\t\t\t<h3>Something went wrong</h3>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t);\r\n\r\n\t\tif (!this.props.error) {\r\n\t\t\tposts = this.props.state.map((post) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Post\r\n\t\t\t\t\t\tdata={post.data}\r\n\t\t\t\t\t\tkey={post.id}\r\n\t\t\t\t\t\turl={post.url}\r\n\t\t\t\t\t\ttitle={post.title}\r\n\t\t\t\t\t\tparagraph={post.paragraph}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.counterPosts.map(() => (\r\n\t\t\t\t\t<Row key={uniqid()} className='w-100 m-0'>\r\n\t\t\t\t\t\t{posts}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t))}\r\n\t\t\t\t<Row className='justify-content-center w-100 m-0'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName='m-5'\r\n\t\t\t\t\t\tvariant='outline-primary'\r\n\t\t\t\t\t\tonClick={this.props.addPost}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLoad more...\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tstate: state.posts,\r\n\t\terror: state.error,\r\n\t\tcounterPosts: state.counterPosts,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tonUrl: (data, id) =>\r\n\t\t\tdispatch({ type: acctionTypes.FETCH_URL, url: data, id: id }),\r\n\t\tonCurrency: (data) =>\r\n\t\t\tdispatch({ type: acctionTypes.FETCH_CURRENCY, currency: data }),\r\n\t\tonError: () => dispatch({ type: acctionTypes.ERROR }),\r\n\t\taddPost: () => dispatch({ type: acctionTypes.ADD_POST }),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Blog);\r\n"],"sourceRoot":""}